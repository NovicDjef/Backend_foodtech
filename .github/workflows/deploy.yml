name: Deploy API to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linting
      run: npm run lint || echo "No lint script found"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          echo "üöÄ Starting deployment..."
          
          # Variables
          APP_DIR="/var/www/api-novic"
          BACKUP_DIR="/var/www/backups"
          APP_NAME="api-novic"
          
          # Create directories if they don't exist
          mkdir -p $APP_DIR
          mkdir -p $BACKUP_DIR
          
          # Backup current version
          if [ -d "$APP_DIR/.git" ]; then
            echo "üì¶ Creating backup..."
            cp -r $APP_DIR $BACKUP_DIR/api-backup-$(date +%Y%m%d-%H%M%S)
          fi
          
          # Clone or pull latest code
          if [ ! -d "$APP_DIR/.git" ]; then
            echo "üì• Cloning repository..."
            git clone ${{ github.server_url }}/${{ github.repository }}.git $APP_DIR
            cd $APP_DIR
          else
            echo "üîÑ Pulling latest changes..."
            cd $APP_DIR
            git fetch origin
            git reset --hard origin/main
          fi
          
          # Install dependencies
          echo "üì¶ Installing dependencies..."
          npm ci --production
          
          # Create .env file if it doesn't exist
          if [ ! -f ".env" ]; then
            echo "‚öôÔ∏è Creating .env file..."
            touch .env
            echo "# Add your environment variables here" > .env
            echo "NODE_ENV=production" >> .env
            echo "PORT=3001" >> .env
          fi
          
          # Start/Restart with PM2
          echo "üîÑ Managing PM2 process..."
          
          # Install PM2 if not installed
          if ! command -v pm2 &> /dev/null; then
            echo "Installing PM2..."
            npm install -g pm2
          fi
          
          # Stop existing process if running
          pm2 stop $APP_NAME || echo "Process not running"
          pm2 delete $APP_NAME || echo "Process not found"
          
          # Start new process
          pm2 start npm --name $APP_NAME -- start
          pm2 save
          
          # Setup PM2 startup if first time
          pm2 startup || echo "PM2 startup already configured"
          
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê API should be available at: https://api.novic.dev"